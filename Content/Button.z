class Button : ZilchComponent
{
    [Dependency]
    var Sprite : Sprite;
    
    [Property]
    var Level : Level = null;
    
    function Initialize(init : CogInitializer)
    {
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.MouseEnter, this.OnMouseEnter);
        Zero.Connect(this.Owner, Events.MouseExit, this.OnMouseExit);
        Zero.Connect(this.Owner, Events.MouseDown, this.OnMouseDown);
        Zero.Connect(this.Owner, Events.MouseUp, this.OnMouseUp);
        
        //reduce the alpha
        this.Owner.Sprite.Color = this.Owner.Sprite.Color + Real4(0.0, 1.0, 0.0, 0.25 - 
                                                                    this.Owner.Sprite.Color.W);
    }

    function OnMouseUp(event : ViewportMouseEvent)
    {
        // destroy the button upon clicking
        //this.Owner.Destroy();
        //something more meaningfukl
        this.Space.LoadLevel(this.Level);
    }

    function OnMouseDown(event : ViewportMouseEvent)
    {
        this.Owner.Sprite.Color = this.Owner.Sprite.Color + Real4(0.0, 1.0, 0.0, 1.0 -
                                                                    this.Owner.Sprite.Color.W);
    }

    function OnMouseExit(event : ViewportMouseEvent)
    {
        //become darker when the mouse leaves the button
        this.Owner.Sprite.Color = this.Owner.Sprite.Color + Real4(0.0, 1.0, 0.0, 0.25 -
                                                                    this.Owner.Sprite.Color.W);
    }

    function OnMouseEnter(event : ViewportMouseEvent)
    {
        // Become brighter to show you are hovering over the button
        this.Owner.Sprite.Color = this.Owner.Sprite.Color + Real4(0.0, 1.0, 0.0, 0.75 -
                                                                    this.Owner.Sprite.Color.W);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
    }
}
